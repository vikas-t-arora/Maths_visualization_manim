from manimlib.imports import *

a=np.sqrt(3)
class CreatePencil(Scene):
    def construct(self):
        hex=Polygon(np.array([0,1,0]),np.array([a/2,1/2,0]),np.array([a/2,-1/2,0]),np.array([0,-1,0]),np.array([-a/2,-1/2,0]),np.array([-a/2,1/2,0])).rotate(0*PI/6)
        hex.set_fill(BLUE,opacity=0.5)
        hex2=hex.copy().scale(1/3).set_fill(DARK_GREY,opacity=1)
        hexa=VGroup(hex,hex2)

        rect1=Polygon(np.array([a/2,1/2,0]),np.array([a/2,-1/2,0]),np.array([a/2+3,-1/2,0]),np.array([a/2+3,1/2,0])).set_fill(BLUE,opacity=0.5)
        rect2=Polygon(np.array([0,1,0]),np.array([a/2,1/2,0]),np.array([a/2+3,1/2,0]),np.array([3.5,1,0])).set_fill(BLUE,opacity=0.5)
        rect3=Polygon(np.array([a/2,-1/2,0]),np.array([0,-1,0]),np.array([3.5,-1,0]),np.array([a/2+3,-1/2,0])).set_fill(BLUE,opacity=0.5)
        rect=VGroup(rect1,rect2,rect3)

        tria1=Polygon(np.array([a/2+3,1/2,0]),np.array([a/2+3,-1/2,0]),np.array([a/2+4.5,0,0]),color=DARK_GREY).set_fill(DARK_GREY,opacity=1)
        tria2=Polygon(np.array([a/2+3,1/2,0]),np.array([a/2+4.5,0,0]),np.array([3.5,1,0]),color=DARK_GREY).set_fill(DARK_GREY,opacity=1)
        tria3=Polygon(np.array([a/2+4.5,0,0]),np.array([a/2+3,-1/2,0]),np.array([3.5,-1,0]),color=DARK_GREY).set_fill(DARK_GREY,opacity=1)
        tria=VGroup(tria1,tria2,tria3)

        pencil=VGroup(hexa,rect,tria).rotate(PI/6).scale(1/6)
        #self.play(ShowCreation(pencil))

        rect=Rectangle(height=2,width=6.5,color=BLUE)
        self.play(GrowFromCenter(rect))
        p1=pencil.copy().shift(4.5*LEFT+0.7*UP)
        p2=pencil.copy().next_to(p1)
        p3=pencil.copy().next_to(p2)
        p4=pencil.copy().next_to(p3)
        p5=pencil.copy().next_to(p4)
        p6=pencil.copy().shift(4.5*LEFT+0.25*DOWN)
        p7=pencil.copy().next_to(p6)
        p8=pencil.copy().next_to(p7)
        p9=pencil.copy().next_to(p8)
        p10=pencil.copy().next_to(p9)
        p=VGroup(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)
        self.play(ShowCreation(p))
        self.wait(1)

        self.play(ApplyMethod(p1.shift,2.37*RIGHT),ApplyMethod(p2.shift,1.19*RIGHT),ApplyMethod(p4.shift,1.19*LEFT),ApplyMethod(p5.shift,2.37*LEFT),ApplyMethod(p6.shift,2.37*RIGHT),ApplyMethod(p7.shift,1.19*RIGHT),ApplyMethod(p9.shift,1.19*LEFT),ApplyMethod(p10.shift,2.37*LEFT))
        self.wait(1)
        self.play(ApplyMethod(p1.shift,0.475*DOWN),ApplyMethod(p2.shift,0.475*DOWN),ApplyMethod(p3.shift,0.475*DOWN),ApplyMethod(p4.shift,0.475*DOWN),ApplyMethod(p5.shift,0.475*DOWN),ApplyMethod(p6.shift,0.475*UP),ApplyMethod(p7.shift,0.475*UP),ApplyMethod(p8.shift,0.475*UP),ApplyMethod(p9.shift,0.475*UP),ApplyMethod(p10.shift,0.475*UP))
        self.wait(1)
        self.play(ApplyMethod(p1.shift,2.37*LEFT),ApplyMethod(p2.shift,1.19*LEFT),ApplyMethod(p4.shift,1.19*RIGHT),ApplyMethod(p5.shift,2.37*RIGHT),ApplyMethod(p6.shift,2.37*LEFT),ApplyMethod(p7.shift,1.19*LEFT),ApplyMethod(p9.shift,1.19*RIGHT),ApplyMethod(p10.shift,2.37*RIGHT))
        self.wait(1)
        self.play(ApplyMethod(p1.shift,0.475*UP),ApplyMethod(p2.shift,0.475*UP),ApplyMethod(p3.shift,0.475*UP),ApplyMethod(p4.shift,0.475*UP),ApplyMethod(p5.shift,0.475*UP),ApplyMethod(p6.shift,0.475*DOWN),ApplyMethod(p7.shift,0.475*DOWN),ApplyMethod(p8.shift,0.475*DOWN),ApplyMethod(p9.shift,0.475*DOWN),ApplyMethod(p10.shift,0.475*DOWN))
        self.wait(1)

        txt=TextMobject("How many pencils are filled =").to_edge(UP)
        self.play(ShowCreation(txt))
        self.wait(1)
        txt1=TextMobject("1",color=YELLOW_D).move_to(p1.get_center())
        txt2=TextMobject("2",color=YELLOW_D).move_to(p2.get_center())
        txt3=TextMobject("3",color=YELLOW_D).move_to(p3.get_center())
        txt4=TextMobject("4",color=YELLOW_D).move_to(p4.get_center())
        txt5=TextMobject("5",color=YELLOW_D).move_to(p5.get_center())
        txt6=TextMobject("6",color=YELLOW_D).move_to(p6.get_center())
        txt7=TextMobject("7",color=YELLOW_D).move_to(p7.get_center())
        txt8=TextMobject("8",color=YELLOW_D).move_to(p8.get_center())
        txt9=TextMobject("9",color=YELLOW_D).move_to(p9.get_center())
        txtt10=TextMobject("10",color=YELLOW_D).move_to(p10.get_center())
        self.play(ShowCreation(txt1))
        self.play(ShowCreation(txt2))
        self.play(ShowCreation(txt3))
        self.play(ShowCreation(txt4))
        self.play(ShowCreation(txt5))
        self.play(ShowCreation(txt6))
        self.play(ShowCreation(txt7))
        self.play(ShowCreation(txt8))
        self.play(ShowCreation(txt9))
        self.play(ShowCreation(txtt10))
        self.wait(1)
        self.play(FadeOut(txt1),FadeOut(txt2),FadeOut(txt3),FadeOut(txt4),FadeOut(txt5),FadeOut(txt6),FadeOut(txt7),FadeOut(txt8),FadeOut(txt9),ApplyMethod(txtt10.move_to,txt.get_center()+3.75*RIGHT))
        self.wait(1)

        txtt=TextMobject("The total number of pencils = ").to_edge(DOWN)
        self.play(ShowCreation(txtt))
        self.wait(1)
        txt1=TextMobject("1",color=RED_D).move_to(p1.get_center())
        txt2=TextMobject("2",color=RED_D).move_to(p2.get_center())
        txt3=TextMobject("3",color=RED_D).move_to(p3.get_center())
        txt4=TextMobject("4",color=RED_D).move_to(p4.get_center())
        txt5=TextMobject("5",color=RED_D).move_to(p5.get_center())
        txt6=TextMobject("6",color=RED_D).move_to(p6.get_center())
        txt7=TextMobject("7",color=RED_D).move_to(p7.get_center())
        txt8=TextMobject("8",color=RED_D).move_to(p8.get_center())
        txt9=TextMobject("9",color=RED_D).move_to(p9.get_center())
        txt10=TextMobject("10",color=RED_D).move_to(p10.get_center())
        self.play(ShowCreation(txt1))
        self.play(ShowCreation(txt2))
        self.play(ShowCreation(txt3))
        self.play(ShowCreation(txt4))
        self.play(ShowCreation(txt5))
        self.play(ShowCreation(txt6))
        self.play(ShowCreation(txt7))
        self.play(ShowCreation(txt8))
        self.play(ShowCreation(txt9))
        self.play(ShowCreation(txt10))
        self.wait(1)
        self.play(FadeOut(txt1),FadeOut(txt2),FadeOut(txt3),FadeOut(txt4),FadeOut(txt5),FadeOut(txt6),FadeOut(txt7),FadeOut(txt8),FadeOut(txt9),ApplyMethod(txt10.move_to,txtt.get_center()+3.75*RIGHT))
        self.wait(1)

        shape=VGroup(rect,p)
        self.play(ApplyMethod(shape.shift,2*LEFT))

        txt1=TextMobject("Fraction = -------- = --",font='Times New Roman').next_to(rect)
        self.play(ShowCreation(txt1))
        self.wait(1)
        self.play(FadeOut(txt),FadeOut(txtt),ApplyMethod(txtt10.move_to,txt1.get_center()+0.7*RIGHT+0.3*UP),ApplyMethod(txt10.move_to,txt1.get_center()+0.7*RIGHT+0.45*DOWN))
        self.wait(1)
        
        txt2=TextMobject("2*5*1",color=YELLOW_D).shift(txtt10.get_center())
        txt3=TextMobject("2*5*1",color=RED_D).shift(txt10.get_center())
        self.play(Transform(txtt10,txt2),Transform(txt10,txt3))
        self.wait(1)
        txt4=TexMobject("/").move_to(txt2.get_center()+0.42*LEFT)
        txt5=TexMobject("/").move_to(txt3.get_center()+0.42*LEFT)
        txt44=txt4.copy().next_to(txt4)
        txt55=txt5.copy().next_to(txt5)
        self.play(ShowCreation(txt4),ShowCreation(txt5),ShowCreation(txt44),ShowCreation(txt55))
        self.wait(1)
        txt6=TextMobject("1",color=YELLOW_D).move_to(txt2.get_center()+1.6*RIGHT)
        txt7=TextMobject("1",color=RED_D).move_to(txt3.get_center()+1.6*RIGHT)
        self.play(ShowCreation(txt6),ShowCreation(txt7))
        self.wait(2)
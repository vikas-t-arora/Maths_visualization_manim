from manimlib.imports import *

class CreateTriangles(Scene):
    def construct(self):
        t0=Polygon(np.array([0,0,0]),np.array([-3,0,0]),np.array([0,-3,0]),color=BLUE).shift(1*RIGHT+1.5*UP)
        self.play(GrowFromCenter(t0))
        self.wait(1)
        t1=Polygon(np.array([0,0,0]),np.array([-1,0,0]),np.array([0,-1,0]),color=BLUE).set_fill(BLUE,opacity=0.5)
        t2=Polygon(np.array([-1,0,0]),np.array([-1,-1,0]),np.array([0,-1,0]),color=BLUE)
        t3=Polygon(np.array([0,-1,0]),np.array([-1,-1,0]),np.array([0,-2,0]),color=BLUE)
        t4=Polygon(np.array([-1,-1,0]),np.array([-1,-2,0]),np.array([0,-2,0]),color=BLUE)
        t5=Polygon(np.array([0,-2,0]),np.array([-1,-2,0]),np.array([0,-3,0]),color=BLUE).set_fill(BLUE,opacity=0.5)
        t6=Polygon(np.array([-1,0,0]),np.array([-2,0,0]),np.array([-1,-1,0]),color=BLUE)
        t7=Polygon(np.array([-2,0,0]),np.array([-2,-1,0]),np.array([-1,-1,0]),color=BLUE)
        t8=Polygon(np.array([-1,-1,0]),np.array([-2,-1,0]),np.array([-1,-2,0]),color=BLUE).set_fill(BLUE,opacity=0.5)
        t9=Polygon(np.array([-2,0,0]),np.array([-3,0,0]),np.array([-2,-1,0]),color=BLUE).set_fill(BLUE,opacity=0.5)
        t=VGroup(t1,t2,t3,t4,t5,t6,t7,t8,t9).shift(1*RIGHT+1.5*UP)
        self.play(ShowCreation(t))
        self.wait(1)
        self.play(FadeOut(t0),ApplyMethod(t1.shift,2*RIGHT+2*UP),ApplyMethod(t6.shift,2*UP),ApplyMethod(t9.shift,2*LEFT+2*UP),ApplyMethod(t2.shift,2*RIGHT+4*DOWN),ApplyMethod(t4.shift,1*LEFT+3*DOWN),ApplyMethod(t7.shift,3*LEFT+4*DOWN),ApplyMethod(t3.shift,2*RIGHT),ApplyMethod(t5.shift,4*LEFT+1*UP))
        self.wait(1)
        self.play(ApplyMethod(t1.shift,3*LEFT),ApplyMethod(t9.shift,3*RIGHT),ApplyMethod(t3.shift,3*LEFT),ApplyMethod(t5.shift,3*RIGHT),ApplyMethod(t2.shift,3*LEFT),ApplyMethod(t7.shift,3*RIGHT))
        self.wait(1)
        self.play(ApplyMethod(t1.shift,3*DOWN),ApplyMethod(t6.shift,3*DOWN),ApplyMethod(t9.shift,3*DOWN),ApplyMethod(t2.shift,3*UP),ApplyMethod(t4.shift,3*UP),ApplyMethod(t7.shift,3*UP))
        self.wait(1)
        self.play(ApplyMethod(t2.rotate,PI),ApplyMethod(t4.rotate,PI),ApplyMethod(t7.rotate,PI))
        self.wait(1)
        self.play(ApplyMethod(t1.shift,3*RIGHT),ApplyMethod(t9.shift,3*LEFT),ApplyMethod(t3.shift,3*RIGHT),ApplyMethod(t5.shift,3*LEFT),ApplyMethod(t2.shift,3*RIGHT),ApplyMethod(t7.shift,3*LEFT))
        self.wait(1)
        self.play(ApplyMethod(t1.shift,3*UP),ApplyMethod(t6.shift,3*UP),ApplyMethod(t9.shift,3*UP),ApplyMethod(t2.shift,3*DOWN),ApplyMethod(t4.shift,3*DOWN),ApplyMethod(t7.shift,3*DOWN))
        self.wait(1)
        self.play(ApplyMethod(t2.rotate,PI),ApplyMethod(t4.rotate,PI),ApplyMethod(t7.rotate,PI))
        self.wait(1)
        self.play(FadeIn(t0),ApplyMethod(t1.shift,2*LEFT+2*DOWN),ApplyMethod(t6.shift,2*DOWN),ApplyMethod(t9.shift,2*RIGHT+2*DOWN),ApplyMethod(t2.shift,2*LEFT+4*UP),ApplyMethod(t4.shift,1*RIGHT+3*UP),ApplyMethod(t7.shift,3*RIGHT+4*UP),ApplyMethod(t3.shift,2*LEFT),ApplyMethod(t5.shift,4*RIGHT+1*DOWN))
        self.wait(1)

        txt=TextMobject("The number of filled small triangles =").to_edge(UP)
        self.play(ShowCreation(txt))
        self.wait(1)
        txt1=TextMobject("1",color=YELLOW_D).move_to(t1.get_center()+0.25*RIGHT+0.25*UP)
        txt2=TextMobject("2",color=YELLOW_D).move_to(t5.get_center()+0.25*RIGHT+0.25*UP)
        txt3=TextMobject("3",color=YELLOW_D).move_to(t8.get_center()+0.25*RIGHT+0.25*UP)
        txtt4=TextMobject("4",color=YELLOW_D).move_to(t9.get_center()+0.25*RIGHT+0.25*UP)
        self.play(ShowCreation(txt1))
        self.play(ShowCreation(txt2))
        self.play(ShowCreation(txt3))
        self.play(ShowCreation(txtt4))
        self.wait(1)
        self.play(FadeOut(txt1),FadeOut(txt2),FadeOut(txt3),ApplyMethod(txtt4.move_to,txt.get_center()+4.75*RIGHT))
        self.wait(1)
        
        txtt=TextMobject("The total number of small triangles = ").to_edge(DOWN)
        self.play(ShowCreation(txtt))
        self.wait(1)
        txt1=TextMobject("1",color=RED_D).move_to(t1.get_center()+0.25*RIGHT+0.25*UP)
        txt2=TextMobject("2",color=RED_D).move_to(t2.get_center()+0.25*LEFT+0.25*DOWN)
        txt3=TextMobject("3",color=RED_D).move_to(t3.get_center()+0.25*RIGHT+0.25*UP)
        txt4=TextMobject("4",color=RED_D).move_to(t4.get_center()+0.25*LEFT+0.25*DOWN)
        txt5=TextMobject("5",color=RED_D).move_to(t5.get_center()+0.25*RIGHT+0.25*UP)
        txt6=TextMobject("6",color=RED_D).move_to(t6.get_center()+0.25*RIGHT+0.25*UP)
        txt7=TextMobject("7",color=RED_D).move_to(t7.get_center()+0.25*LEFT+0.25*DOWN)
        txt8=TextMobject("8",color=RED_D).move_to(t8.get_center()+0.25*RIGHT+0.25*UP)
        txt9=TextMobject("9",color=RED_D).move_to(t9.get_center()+0.25*RIGHT+0.25*UP)
        self.play(ShowCreation(txt1))
        self.play(ShowCreation(txt2))
        self.play(ShowCreation(txt3))
        self.play(ShowCreation(txt4))
        self.play(ShowCreation(txt5))
        self.play(ShowCreation(txt6))
        self.play(ShowCreation(txt7))
        self.play(ShowCreation(txt8))
        self.play(ShowCreation(txt9))
        self.wait(1)
        self.play(FadeOut(txt1),FadeOut(txt2),FadeOut(txt3),FadeOut(txt4),FadeOut(txt5),FadeOut(txt6),FadeOut(txt7),FadeOut(txt8),ApplyMethod(txt9.move_to,txtt.get_center()+4.75*RIGHT))
        self.wait(1)

        txt11=TextMobject("Fraction = --- ").next_to(t0)
        self.play(ShowCreation(txt11))
        self.wait(1)
        self.play(FadeOut(txt),FadeOut(txtt),ApplyMethod(txtt4.move_to,txt11.get_center()+1.3*RIGHT+0.3*UP),ApplyMethod(txt9.move_to,txt11.get_center()+1.3*RIGHT+0.48*DOWN))
        self.wait(2)

        #self.play(FadeOut(t0),ApplyMethod(t1.shift,1*LEFT+1*DOWN))
        #self.play(ApplyMethod(t1.shift,1*RIGHT+1*UP))
        #self.play(ApplyMethod(t2.flip,RIGHT+UP))
        self.wait(2)